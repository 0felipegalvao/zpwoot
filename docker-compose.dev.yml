services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: zpmeow_postgres_dev
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-zpmeow}
      POSTGRES_USER: ${POSTGRES_USER:-zpmeow}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-zpmeow123}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - zpmeow_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-zpmeow} -d ${POSTGRES_DB:-zpmeow}"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    env_file:
      - .env

  # Redis (for caching and session storage)
  redis:
    image: redis:7-alpine
    container_name: zpmeow_redis_dev
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - zpmeow_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # DbGate - Database Administration Tool
  dbgate:
    image: dbgate/dbgate:latest
    container_name: zpmeow_dbgate_dev
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      CONNECTIONS: con1
      LABEL_con1: ZPMeow PostgreSQL
      SERVER_con1: postgres
      USER_con1: ${POSTGRES_USER:-zpmeow}
      PASSWORD_con1: ${POSTGRES_PASSWORD:-zpmeow123}
      PORT_con1: 5432
      ENGINE_con1: postgres@dbgate-plugin-postgres
      DATABASE_con1: ${POSTGRES_DB:-zpmeow}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - zpmeow_network

  # Webhook Tester - For testing webhooks
  webhook-tester:
    image: ghcr.io/tarampampam/webhook-tester:2
    container_name: zpmeow_webhook_tester_dev
    ports:
      - "8090:8080"
    environment:
      - LOG_LEVEL=info
      - LOG_FORMAT=console
      - SESSION_TTL=24h
      - MAX_REQUESTS=1000
      - AUTO_CREATE_SESSIONS=true
      - STORAGE_DRIVER=memory
      - PUBSUB_DRIVER=memory
    networks:
      - zpmeow_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Commander - Redis Web UI (Alternative to DbGate for Redis)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: zpmeow_redis_commander_dev
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
      - HTTP_USER=admin
      - HTTP_PASSWORD=admin123
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - zpmeow_network
    restart: unless-stopped



volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  zpmeow_network:
    driver: bridge
    name: zpmeow_network
